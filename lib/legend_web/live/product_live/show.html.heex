<pre>
  Task 1 answers
  a. /products/:id gets invoked
  b. It adds the :live_action key to the socket
  c. The function gets the id params from the accessed route, gets a product with that id, chnages the page title according to the live_action, and passed all these to the socket
  d. It checks if the live_action is edit. If so, it renders it, otherwise skips it. The form supports save and validate events. Validate is fired when any of the form inputs changes, and svae is fired when the form is submitted
</pre>

<h1>Show Product</h1>

<%= if @live_action in [:edit] do %>
  <.modal return_to={Routes.product_show_path(@socket, :show, @product)}>
    <.live_component
      module={LegendWeb.ProductLive.FormComponent}
      id={@product.id}
      title={@page_title}
      action={@live_action}
      product={@product}
      return_to={Routes.product_show_path(@socket, :show, @product)}
    />
  </.modal>
<% end %>

<ul>

  <li>
    <strong>Name:</strong>
    <%= @product.name %>
  </li>

  <li>
    <strong>Description:</strong>
    <%= @product.description %>
  </li>

  <li>
    <strong>Unit price:</strong>
    <%= @product.unit_price %>
  </li>

  <li>
    <strong>Sku:</strong>
    <%= @product.sku %>
  </li>

</ul>

<span><%= live_patch "Edit", to: Routes.product_show_path(@socket, :edit, @product), class: "button" %></span> |
<span><%= live_redirect "Back", to: Routes.product_index_path(@socket, :index) %></span>
